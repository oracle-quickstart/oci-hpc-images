---
- name: Remove ppa
  ansible.builtin.apt_repository:
    repo: ppa:graphics-drivers/ppa
    state: absent

- name: Add pin file
  ansible.builtin.copy:
    src: "cuda-ubuntu.pin"
    dest: "/etc/apt/preferences.d/cuda-repository-pin-600"
    owner: "root"
    group: "root"
    mode: "0644"
  when: nvidia_driver_add_repos | bool

- name: Add key
  ansible.builtin.apt_key:
    url: "{{ nvidia_driver_ubuntu_cuda_repo_gpgkey_url_x86 }}"
    id: "{{ nvidia_driver_ubuntu_cuda_repo_gpgkey_id }}"
  environment: "{{ proxy_env if proxy_env is defined else {} }}"
  when: nvidia_driver_add_repos | bool and ansible_architecture == 'x86_64'

- name: Add key
  ansible.builtin.apt_key:
    url: "{{ nvidia_driver_ubuntu_cuda_repo_gpgkey_url_arm }}"
    id: "{{ nvidia_driver_ubuntu_cuda_repo_gpgkey_id }}"
  environment: "{{ proxy_env if proxy_env is defined else {} }}"
  when: nvidia_driver_add_repos | bool and ansible_architecture != 'x86_64'

- name: Esure kmod is installed
  ansible.builtin.apt:
    name: "kmod"
    state: "present"
    lock_timeout: 300

- name: Blacklist nouveau
  community.general.kernel_blacklist:
    name: nouveau
    state: present

- name: Add repo
  ansible.builtin.apt_repository:
    repo: "deb {{ nvidia_driver_ubuntu_cuda_repo_baseurl_arm }} /"
    update_cache: true
  environment: "{{ proxy_env if proxy_env is defined else {} }}"
  when: nvidia_driver_add_repos | bool and ansible_architecture != 'x86_64'

- name: Add repo
  ansible.builtin.apt_repository:
    repo: "deb {{ nvidia_driver_ubuntu_cuda_repo_baseurl_x86 }} /"
    update_cache: true
  environment: "{{ proxy_env if proxy_env is defined else {} }}"
  when: nvidia_driver_add_repos | bool and ansible_architecture == 'x86_64'

- name: Install driver packages
  ansible.builtin.apt:
    name: "{{ item }}" # noqa yaml[line-length]
    state: "{{ nvidia_driver_package_state }}"
    autoremove: "{{ nvidia_driver_package_state == 'absent' }}"
    purge: "{{ nvidia_driver_package_state == 'absent' }}"
    lock_timeout: 300
  with_items: "{{nvidia_driver_ubuntu_cuda_packages}}"
  register: install_driver
  environment: "{{ proxy_env if proxy_env is defined else {} }}"

# add peermem to modprobe.d
- name: Add peermem to modprobe.d
  ansible.builtin.lineinfile:
    path: /etc/modules-load.d/modules.conf
    line: "nvidia_peermem"
